-if employee.errors.any?
  #error_explanation
    %h2= "#{pluralize(employee.errors.count, "error")} prohibited this employee from being saved:"
    %ul
      - employee.errors.full_messages.each do |msg|
        %li= msg
= form_for employee do |f|
  .field.employee_key
    = f.label :key, 'Employee Number'
    = f.text_field :key
  .field.employee_first_name
    = f.label :first_name, 'First Name'
    = f.text_field :first_name
  .field.employee_last_name
    = f.label :last_name, 'Last Name'
    = f.text_field :last_name
  .field.employee_employment_type_id
    = f.label :employment_type_id, 'Employee Type'
    %span Permanent
  .field.employee_started_at
    = f.label :started_at, 'Start Date'
    = f.date_select :started_at, { order: [ :day, :month, :year ]}
  .field.employee_terminated_at
    = f.label :terminated_at, 'End Date'
    = f.date_select :terminated_at, { order: [ :day, :month, :year ], prompt: true }
  %hr
  %table.employee_rates{ colspacing: '0' }
    %tr
      %th Cost Rate
      %th Card Rate
      %th Internal Rate
      %th Team
      %th End Date
    = f.fields_for :employee_rates do |employee_rate|
      %tr
        %td.cost_rate
          = employee_rate.text_field :cost_rate
        %td.card_rate
          = employee_rate.text_field :card_rate
        %td.internal_rate
          = employee_rate.text_field :internal_rate
        %td.team
          = employee_rate.collection_select :team_id, current_company.teams, 'id', 'display_name'
        %td.until
          - if employee_rate.object.until
            = employee_rate.date_select :until, order: [ :day, :month, :year ]
          - else
            = employee_rate.date_select :until, prompt: true, start_year: Time.now.year - 1, order: [ :day, :month, :year ]
    %tr
      %td{ colspan: '5' }
        .actions
          = link_to 'Add Assignment', '#', class: 'add_assignment'
  %hr
  .actions    
    = f.submit 'Save'
    = link_to 'Back', employees_path

