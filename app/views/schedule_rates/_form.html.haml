-if project.errors.any?
  #error_explanation
    %h2= "#{pluralize(project.errors.count, "error")} prohibited this schedule_rate from being saved:"
    %ul
      - project.errors.full_messages.each do |msg|
        %li= msg
= form_for [ project, schedule_rate ] do |schedule_rate_form|
  = hidden_field_tag :return_to_path, return_to_path
  %table.form
    %tr
      %th.verified Verified
      %th.schedule_rate Daily Rate
      %th.until Until
    - most_recent_back_rate = schedule_rates.last
    - schedule_rates.chronological.each do |back_rate|
      %tr
        %td.verified
          = # schedule_rate.state :state
          = check_box_tag 'Verified', true, {}, { disabled: true }
        %td.schedule_rate
          = back_rate.contract_rate
        %td.until
          - if back_rate == most_recent_schedule_rate
            = fields_for :schedule_rate, back_rate do |back_rate_form|
              = hidden_field_tag 'schedule_rate[back_rate][id]', back_rate[:id]
              = back_rate_form.date_select :until, { order: [ :day, :month, :year ], index: 'back_rate' }
          - else
            - if back_rate.until
              = back_rate.until.strftime '%A, %B %e %Y'
    %tr
      %td.verified
        = check_box_tag 'Verified', true, {}, { disabled: true }
      %td.schedule_rate
        = schedule_rate_form.text_field :contract_rate
      %td.until
        Until
        = # schedule_rate_form.date_select :until, order: [ :day, :month, :year ]
        - if schedule_rate_form.object.until
          %span.until_date
            = schedule_rate_form.date_select :until, order: [ :day, :month, :year ]
        - else
          %span.until_end_of_project
            end of project
  %hr
  .actions
    = schedule_rate_form.submit 'Save'
    = link_to 'Cancel', project_schedule_rates_path(project)
